# -*- coding: utf-8 -*-
import logging

from django.conf import settings
from django.contrib.auth import get_user_model
from django.db import models
from django.db.models import signals
from django.dispatch import receiver
from django.shortcuts import resolve_url
from django.utils.translation import ugettext_lazy as _
from django_powerbank.db.models.base import BaseModel
from django_powerbank.db.models.fields import SecretField

from .misc import send_mail_template

log = logging.getLogger(__name__)


class ShareBase(BaseModel):
    author = models.ForeignKey(get_user_model(), verbose_name=_('visitor'), on_delete=models.CASCADE, related_name='+', )
    email = models.EmailField(verbose_name=_('email'), help_text=_('Recipient email address'))
    secret = SecretField(
        verbose_name=_('secret'), help_text=_('Autogenerated password for the shared data'),
        max_length=20, source_field='email',
    )
    created = models.DateTimeField(verbose_name=_('created'), auto_now_add=True)
    access_counter = models.SmallIntegerField(default=0)

    class Meta:
        abstract = True


class SharedUrl(ShareBase):
    url = models.URLField(verbose_name=_('url'), help_text=_('Url to share'), blank=True, null=True)

    class Meta:
        default_related_name = "shared_urls"
        verbose_name = _('shared url')
        verbose_name_plural = _('shared url')


class SharedFile(ShareBase):
    file = models.FileField(verbose_name=_('file'), help_text=_('File to share'), blank=True, null=True)

    class Meta:
        default_related_name = "shared_files"
        verbose_name = _('shared file')
        verbose_name_plural = _('shared file')


class UserAgent(BaseModel):
    user = models.ForeignKey(get_user_model(), verbose_name=_('visitor'), on_delete=models.CASCADE, related_name='+', )
    agent = models.CharField(max_length=200, verbose_name=('user agent'))
    ts = models.DateTimeField(verbose_name=_('time stamp'), auto_now=True)


# noinspection PyUnusedLocal
@receiver(signals.post_save, sender=SharedUrl)
def send_url_notification(sender, instance=None, **kwargs):
    subject = _("{} shared an url with you").format(instance.author.username, )
    template = "secure_share/SharedUrl/email/notification.html"
    url = resolve_url("secure_share:SharedUrlAuthorize", instance.pk)
    _send_notification(instance, subject, template, url)


@receiver(signals.post_save, sender=SharedFile)
def send_file_notification(sender, instance=None, **kwargs):
    subject = _("{} shared a file with you").format(instance.author.username, )
    template = "secure_share/SharedUrl/email/notification.html"
    url = resolve_url("secure_share:SharedFileAuthorize", instance.pk)
    _send_notification(instance, subject, template, url)


def _send_notification(instance, subject, template, url):
    log.debug("Sending to: %s", instance.email)
    url = '{base_url}{url}'.format(base_url=settings.BASE_URL, url=url)
    ctx = {
        'object': instance,
        'password': instance.secret,
        'url': url,
    }
    subject = subject.format(**ctx)
    send_mail_template(template, ctx, subject, to=instance.email)
